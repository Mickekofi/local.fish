#!/bin/bash

# DO NOT EDIT THIS FILE
#======================================================
if [ -z "$FROM_START" ]; then
    echo -e "\e[31m‚ùå You cannot run server.sh directly! Please use start.sh\e[0m"
    exit 1
fi

# Check if Port 419 is already in use and stop it
if lsof -i :419 | grep LISTEN; then
    echo "Port 419 is already in use. Stopping existing process..."
    sudo kill -9 $(lsof -t -i :419)
    sleep 2
fi

# Start PHP built-in server with logging
php -S localhost:419 > php_server.log 2>&1 &
echo -e "\e[32m‚úÖ Server running on http://localhost:419\e[0m"
echo -e "\n"

# Wait for the server to start
sleep 2

# Menu for tunneling options
echo -e "\e[34mPlease select a tunneling option:\e[0m"
echo "1. Cloudflared"
echo "2. Ngrok"
echo "3. Localhost.run"
read -p "Enter your choice (1/2/3): " TUNNEL_OPTION

case $TUNNEL_OPTION in
    1)
        # Cloudflared
        if command -v cloudflared &> /dev/null; then
            echo "‚úÖ Starting Cloudflared..."
            echo -e "\n"
            cloudflared tunnel --url http://localhost:419 | tee cloudflared.log &
            sleep 5
            CLOUDFLARED_URL=$(grep -o 'https://[^ ]*\.trycloudflare.com' cloudflared.log | head -n 1)
            if [[ -n "$CLOUDFLARED_URL" ]]; then
                echo -e "\e[32m‚úÖ Cloudflared started successfully!\e[0m"
                echo -e "\e[32m‚úÖ Your public link: $CLOUDFLARED_URL\e[0m"
            else
                echo -e "\e[31m‚ö†Ô∏è Cloudflared failed to start or no public URL found. Check cloudflared.log for details.\e[0m"
            fi
        else
            echo -e "\e[31m‚ùå Cloudflared is not installed. Please install it first.\e[0m"
        fi
        ;;
    2)
        # Ngrok
        if command -v ngrok &> /dev/null; then
            echo "‚úÖ Starting Ngrok..."
            echo -e "\n"
            ngrok http 419 > ngrok.log 2>&1 &
            sleep 5
            NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | grep -o 'https://[^,]*' | head -n 1)
            if [[ -n "$NGROK_URL" ]]; then
                echo -e "\e[32m‚úÖ Ngrok started successfully!\e[0m"
                echo -e "\e[32m‚úÖ Your public link: $NGROK_URL\e[0m"
            else
                echo -e "\e[31m‚ö†Ô∏è Ngrok failed to start or no public URL found. Check ngrok.log for details.\e[0m"
            fi
        else
            echo -e "\e[31m‚ùå Ngrok is not installed. Please install it first.\e[0m"
        fi
        ;;
    3)
        # Localhost.run
        echo "‚úÖ Starting Localhost.run..."
        echo -e "\n"
        ssh -R 80:localhost:419 ssh.localhost.run
        ;;
    *)
        echo -e "\e[31m‚ùå Invalid option selected. Exiting...\e[0m"
        exit 1
        ;;
esac

# Monitor and alert for new activity
echo -e "\n\e[34müîç Monitoring server for activity... Press Ctrl+C to stop.\e[0m"

# Loop to check for updates in the log file
LOG_FILE="php_server.log"
LAST_LINE=""

while true; do
    NEW_LINE=$(tail -n 1 $LOG_FILE)
    if [[ "$NEW_LINE" != "$LAST_LINE" && -n "$NEW_LINE" ]]; then
        echo -e "\e[32m[ALERT] New interaction detected: $NEW_LINE\e[0m"
        LAST_LINE="$NEW_LINE"
    fi
    sleep 1
done
